%% LyX 2.0.6 created this file.  For more info, see http://www.lyx.org/.
%% Do not edit unless you really know what you are doing.
\documentclass{article}
\usepackage{mathpazo}
\renewcommand{\sfdefault}{lmss}
\renewcommand{\ttdefault}{lmtt}
\usepackage[T1]{fontenc}
\usepackage{geometry}
\geometry{verbose,tmargin=3cm,bmargin=3cm,lmargin=3cm,rmargin=3cm}
\usepackage{url}
\usepackage[authoryear]{natbib}
\usepackage[unicode=true,pdfusetitle,
 bookmarks=true,bookmarksnumbered=true,bookmarksopen=true,bookmarksopenlevel=1,
 breaklinks=true,pdfborder={0 0 1},backref=false,colorlinks=false]
 {hyperref}
\hypersetup{
 pdfstartview=FitH}
\usepackage{breakurl}

\makeatletter

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% LyX specific LaTeX commands.
\providecommand{\LyX}{\texorpdfstring%
  {L\kern-.1667em\lower.25em\hbox{Y}\kern-.125emX\@}
  {LyX}}

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%% User specified LaTeX commands.
%\VignetteIndexEntry{Rd2roxygen: Convert Rd to roxygen documentation and utilities to enhance R documentation}
% \VignetteEngine{knitr}

\makeatother

\begin{document}


\title{\textbf{Rd2roxygen}: Convert Rd to \textbf{roxygen} documentation
and utilities to enhance R documentation}


\author{Yihui Xie%
\thanks{Department of Statistics, Iowa State University. Email: \protect\href{mailto:xie@yihui.name}{xie@yihui.name}%
}}

\maketitle
<<setup, echo=FALSE>>=
library('knitr')
opts_chunk$set(comment=NA, message=FALSE)
options(keep.blank.line = FALSE, width=80)
@

The package \textbf{Rd2roxygen} \citep{R-Rd2roxygen} helps R package
developers who used to write R documentation in the raw \LaTeX{}-like
commands but now want to switch their documentation to \textbf{roxygen2}
\citep{R-roxygen2}, which is a convenient tool for developers, since
we can write documentation as inline comments, e.g.

<<roxygen-ex>>=
## the source code of the function `parse_and_save`
ex.file = system.file('examples','parse_and_save.R',package='Rd2roxygen')
cat(readLines(ex.file), sep='\n')
@

With \textbf{roxygen2} (typically using \emph{roxygenize()}), we can
create the real Rd file from the above source code like this:

<<rd-ex>>=
rd.file = system.file('examples','parse_and_save.Rd',package='Rd2roxygen')
cat(readLines(rd.file), sep='\n')
@

The \textbf{Rd2roxygen} package goes exactly in the \emph{opposite}
way -- it parses the Rd files and turns them back to roxygen comments.
We can either do this job on single Rd files, or just convert the
whole package. The latter might be more useful for developers who
are considering the transition from Rd to roxygen.


\section{Convert a whole package}

The function \emph{Rd2roxygen()} can take a path of a source package,
parse all the Rd files under the \texttt{man} directory, and write
the roxygen comments right above the source code of the functions
under the \texttt{R} directory. See \texttt{?Rd2roxygen} for an example.

<<Rd2roxygen>>=
library(Rd2roxygen)
args(Rd2roxygen)
## e.g. Rd2roxygen('somewhere/to/source/pkg')
## there must be 'man' and 'R' directories under this path
@


\section{Parse a single Rd file}

We can parse a single Rd file and create the roxygen comments as well
with \emph{parse\_file()} and \emph{create\_roxygen()}, e.g.:

<<parse-file>>=
## we can specify the roxygen comments prefix (#' by default)
options(roxygen.comment = "##' ")
(info = parse_file(rd.file))
cat(create_roxygen(info), sep='\n') # parse_and_save() combines these two steps
@


\section{Roxygenize and build a package}

This package also provides a tool \emph{roxygen\_and\_build()} (or
in short \emph{rab()}) to help us build the package.

<<rab,echo=FALSE>>=
formatR::usage(rab)
@

The main feature of \emph{rab()} is the option to ``reformat'' the
code in the usage and example sections. If we specify \texttt{reformat
= TRUE} in \emph{rab()}, the code will be reformated like this:

<<reformat-ex1,eval=FALSE,tidy=FALSE>>=
## original code
rab=function(pkg,roxygen.dir=pkg,build=TRUE,install=FALSE,
check=FALSE,check.opts='',remove.check=TRUE,reformat=TRUE,...){}
@
<<reformat-ex2,eval=FALSE>>=
## the reformatted code; note the spaces and indent
rab=function(pkg,roxygen.dir=pkg,build=TRUE,install=FALSE,
check=FALSE,check.opts='',remove.check=TRUE,reformat=TRUE,...){}
@

Note this functionality depends on the package \textbf{formatR} \citep{R-formatR},
and sometimes it might be not be possible to reformat the code, e.g.
the \texttt{\textbackslash{}dontrun\{\}} command in Rd can contain
arbitrary texts, which means there could be illegal R expressions
and \textbf{formatR} will be unable to format the code. In this case,
the original code will not be reformatted and a message will be printed
on screen.


\section*{About this vignette}

You might be curious about how this vignette was generated, because
it looks different from other Sweave-based vignettes. The answer is
\textbf{knitr} \citep{R-knitr}. The real vignette is in \LyX{}, which
can be found at \url{https://github.com/yihui/Rd2roxygen/tree/master/inst/doc},
and the corresponding Rnw source is here:

<<lyx-doc, eval=FALSE>>=
system.file('doc', 'Rd2roxygen.Rnw', package='Rd2roxygen')
@

Instructions on how to use \textbf{knitr} with \LyX{} can be found
at \url{http://yihui.name/knitr/demo/lyx/}.

<<write-bib, include=FALSE>>=
# automatically write the bibliography database
write_bib(c('Rd2roxygen', 'roxygen2', 'formatR', 'knitr'), file = 'Rd2roxygen.bib')
@

\bibliographystyle{jss}
\bibliography{Rd2roxygen}


\end{document}
